<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>nssecurecoding</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//MARK: - NSSecureCoding
    
    public static var supportsSecureCoding = true
    
    private enum CodingKeys: String, CodingKey {
        case &lt;#iVarName#&gt;
        &lt;#...#&gt;
    }
    
    public func encode(with coder: NSCoder) {
        coder.encode(&lt;#iVarName#&gt;, forKey: CodingKeys.&lt;#iVarName#&gt;.rawValue)
        &lt;#...#&gt;
    }
    
    public required init?(coder: NSCoder) {
        
        //Mandatory
        guard let &lt;#iVarName#&gt; = coder.decodeObject(forKey: CodingKeys.&lt;#iVarName#&gt;.rawValue) as? &lt;#iVarType#&gt; else {
            return nil
        }
        self.&lt;#iVarName#&gt; = &lt;#iVarName#&gt;
        
        //Optional
        &lt;#iVarName#&gt; = coder.decodeObject(forKey: CodingKeys.&lt;#iVarName#&gt;.rawValue) as? &lt;#iVarType#&gt;
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>C2E824D5-E6C1-4534-A5A1-1E183DB6B2BD</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>All methods needed for conforming a class to NSSecureCoding</string>
	<key>IDECodeSnippetTitle</key>
	<string>NSSecureCoding conformance</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
